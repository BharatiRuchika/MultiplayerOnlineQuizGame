{"ast":null,"code":"var _jsxFileName = \"/Users/ruchikaashokbharati/Documents/Projects/Backend_Kahoot-main3/client/src/components/Game/Timer.js\";\nimport React, { Component } from 'react';\nimport sound from '../../Assets/counter.wav';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Timer extends Component {\n  constructor() {\n    super();\n    this.state = {\n      time: {},\n      seconds: 20\n    };\n    this.timer = 0;\n    this.startTimer = this.startTimer.bind(this);\n    this.countDown = this.countDown.bind(this);\n    this.audio = new Audio(sound);\n  }\n\n  secondsToTime(secs) {\n    let hours = Math.floor(secs / (60 * 60)); // console.log(\"hours\",hours)\n\n    let divisor_for_minutes = secs % (60 * 60); // console.log(\"divisor_for_minutes\",divisor_for_minutes)\n\n    let minutes = Math.floor(divisor_for_minutes / 60); // console.log(\"minutes\",minutes);\n\n    let divisor_for_seconds = divisor_for_minutes % 60; // console.log(\"divisor_for_seconds\",divisor_for_seconds);\n\n    let seconds = Math.ceil(divisor_for_seconds); // console.log(\"seconds\",seconds);\n\n    let obj = {\n      \"h\": hours,\n      \"m\": minutes,\n      \"s\": seconds\n    };\n    return obj;\n  }\n\n  componentDidMount() {\n    let timeLeftVar = this.secondsToTime(this.state.seconds); // console.log(\"timeLeftVar\",timeLeftVar);\n\n    this.setState({\n      time: timeLeftVar\n    });\n    this.startTimer();\n  }\n\n  startTimer() {\n    if (this.timer == 4) {\n      this.audio.play();\n    }\n\n    if (this.timer == 0) {\n      this.timer = setInterval(this.countDown, 1000);\n    }\n  }\n\n  countDown() {\n    let seconds = this.state.seconds - 1; // console.log(\"seconds\",seconds);\n\n    this.setState({\n      time: this.secondsToTime(seconds),\n      seconds: seconds\n    });\n\n    if (seconds == 0) {\n      clearInterval(this.timer);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer\",\n      children: [\"Seconds Left: \", this.state.time.s]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/ruchikaashokbharati/Documents/Projects/Backend_Kahoot-main3/client/src/components/Game/Timer.js"],"names":["React","Component","sound","Timer","constructor","state","time","seconds","timer","startTimer","bind","countDown","audio","Audio","secondsToTime","secs","hours","Math","floor","divisor_for_minutes","minutes","divisor_for_seconds","ceil","obj","componentDidMount","timeLeftVar","setState","play","setInterval","clearInterval","render","s"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,0BAAlB;;AACA,eAAe,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AACzCG,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,IAAI,EAAE,EAAR;AAAYC,MAAAA,OAAO,EAAE;AAArB,KAAb;AACA,SAAKC,KAAL,GAAa,CAAb;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeD,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKE,KAAL,GAAa,IAAIC,KAAJ,CAAUX,KAAV,CAAb;AACD;;AAEDY,EAAAA,aAAa,CAACC,IAAD,EAAM;AACjB,QAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAI,IAAI,KAAK,EAAT,CAAf,CAAZ,CADiB,CAEjB;;AACA,QAAII,mBAAmB,GAAGJ,IAAI,IAAI,KAAK,EAAT,CAA9B,CAHiB,CAIjB;;AACA,QAAIK,OAAO,GAAGH,IAAI,CAACC,KAAL,CAAWC,mBAAmB,GAAG,EAAjC,CAAd,CALiB,CAMjB;;AACA,QAAIE,mBAAmB,GAAGF,mBAAmB,GAAG,EAAhD,CAPiB,CAQjB;;AACA,QAAIZ,OAAO,GAAGU,IAAI,CAACK,IAAL,CAAUD,mBAAV,CAAd,CATiB,CAUjB;;AACA,QAAIE,GAAG,GAAG;AACR,WAAKP,KADG;AAER,WAAKI,OAFG;AAGR,WAAKb;AAHG,KAAV;AAKA,WAAOgB,GAAP;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,WAAW,GAAG,KAAKX,aAAL,CAAmB,KAAKT,KAAL,CAAWE,OAA9B,CAAlB,CADkB,CAElB;;AACA,SAAKmB,QAAL,CAAc;AAAEpB,MAAAA,IAAI,EAAEmB;AAAR,KAAd;AACA,SAAKhB,UAAL;AACD;;AAEDA,EAAAA,UAAU,GAAG;AACX,QAAG,KAAKD,KAAL,IAAY,CAAf,EAAiB;AACf,WAAKI,KAAL,CAAWe,IAAX;AACD;;AACD,QAAI,KAAKnB,KAAL,IAAc,CAAlB,EAAqB;AACnB,WAAKA,KAAL,GAAaoB,WAAW,CAAC,KAAKjB,SAAN,EAAiB,IAAjB,CAAxB;AACD;AACF;;AAEDA,EAAAA,SAAS,GAAG;AACV,QAAIJ,OAAO,GAAG,KAAKF,KAAL,CAAWE,OAAX,GAAqB,CAAnC,CADU,CAEV;;AACA,SAAKmB,QAAL,CAAc;AACZpB,MAAAA,IAAI,EAAE,KAAKQ,aAAL,CAAmBP,OAAnB,CADM;AAEZA,MAAAA,OAAO,EAAEA;AAFG,KAAd;;AAKA,QAAIA,OAAO,IAAI,CAAf,EAAkB;AAChBsB,MAAAA,aAAa,CAAC,KAAKrB,KAAN,CAAb;AACD;AACF;;AAEDsB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,mCACgB,KAAKzB,KAAL,CAAWC,IAAX,CAAgByB,CADhC;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAhEwC","sourcesContent":["import React, { Component } from 'react';\nimport sound from '../../Assets/counter.wav';\nexport default class Timer extends Component {\n    constructor() {\n      super();\n      this.state = { time: {}, seconds: 20 };\n      this.timer = 0;\n      this.startTimer = this.startTimer.bind(this);\n      this.countDown = this.countDown.bind(this);\n      this.audio = new Audio(sound);\n    }\n  \n    secondsToTime(secs){\n      let hours = Math.floor(secs / (60 * 60));\n      // console.log(\"hours\",hours)\n      let divisor_for_minutes = secs % (60 * 60);\n      // console.log(\"divisor_for_minutes\",divisor_for_minutes)\n      let minutes = Math.floor(divisor_for_minutes / 60);\n      // console.log(\"minutes\",minutes);\n      let divisor_for_seconds = divisor_for_minutes % 60;\n      // console.log(\"divisor_for_seconds\",divisor_for_seconds);\n      let seconds = Math.ceil(divisor_for_seconds);\n      // console.log(\"seconds\",seconds);\n      let obj = {\n        \"h\": hours,\n        \"m\": minutes,\n        \"s\": seconds\n      };\n      return obj;\n    }\n  \n    componentDidMount() {\n      let timeLeftVar = this.secondsToTime(this.state.seconds);\n      // console.log(\"timeLeftVar\",timeLeftVar);\n      this.setState({ time: timeLeftVar });\n      this.startTimer();\n    }\n  \n    startTimer() {\n      if(this.timer==4){\n        this.audio.play();\n      }\n      if (this.timer == 0) {\n        this.timer = setInterval(this.countDown, 1000);\n      }\n    }\n  \n    countDown() {\n      let seconds = this.state.seconds - 1;\n      // console.log(\"seconds\",seconds);\n      this.setState({\n        time: this.secondsToTime(seconds),\n        seconds: seconds,\n      });\n      \n      if (seconds == 0) { \n        clearInterval(this.timer);\n      }\n    }\n  \n    render() {\n      return(\n        <div className='timer'>\n         Seconds Left: {this.state.time.s}\n        </div>\n      );\n    }\n  }"]},"metadata":{},"sourceType":"module"}