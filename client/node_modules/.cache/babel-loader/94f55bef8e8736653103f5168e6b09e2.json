{"ast":null,"code":"var _jsxFileName = \"/Users/ruchikaashokbharati/Documents/Projects/Backend_Kahoot-main3/client/src/components/Game/Game_Over.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Zoom from '../animations/zoomin.js';\nimport Socket from \"../../Socket\";\nimport { connect } from 'react-redux';\nimport { handleNickname, selectedPin } from '../../Reducer/Reducer';\nimport './Game.css';\nimport sound from '../../Assets/game_over.wav';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GameOver(props) {\n  _s();\n\n  useEffect(() => {\n    // Socket.emit('hostend',props.selectedPin);\n    Socket.emit(\"destroy\", props.selectedPin);\n    const audio = new Audio(sound);\n    audio.play();\n  }, []); // const startConnection=()=>{\n  //     console.log(\"connection restart\");\n  //     Socket.emit('startConnect');\n  // }\n\n  console.log(\"gameoverprops\", props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-over\",\n    children: [/*#__PURE__*/_jsxDEV(Zoom, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"leaderBoard-title\",\n      children: \"Game Over\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: \"white\"\n      },\n      className: \"leaderBoard\",\n      children: [\"1st Place: \", props.leaderboard[0].name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"leaderBoard\",\n      children: [\"2nd Place: \", props.leaderboard[1].name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"leaderBoard\",\n      children: [\"Last Place: \", props.leaderboard.pop().name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GameOver, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = GameOver;\n\nfunction mapStateToProps(state) {\n  console.log(\"state\", state);\n  return {\n    selectedPin: state.selectedPin\n  };\n}\n\nexport default connect(mapStateToProps)(GameOver);\n\nvar _c;\n\n$RefreshReg$(_c, \"GameOver\");","map":{"version":3,"sources":["/Users/ruchikaashokbharati/Documents/Projects/Backend_Kahoot-main3/client/src/components/Game/Game_Over.js"],"names":["React","useEffect","Link","Zoom","Socket","connect","handleNickname","selectedPin","sound","GameOver","props","emit","audio","Audio","play","console","log","color","leaderboard","name","pop","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,uBAA5C;AACA,OAAO,YAAP;AACA,OAAOC,KAAP,MAAkB,4BAAlB;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AAAA;;AAEpBT,EAAAA,SAAS,CAAC,MAAI;AACV;AACAG,IAAAA,MAAM,CAACO,IAAP,CAAY,SAAZ,EAAsBD,KAAK,CAACH,WAA5B;AAEI,UAAMK,KAAK,GAAG,IAAIC,KAAJ,CAAUL,KAAV,CAAd;AACAI,IAAAA,KAAK,CAACE,IAAN;AAEP,GAPQ,EAOP,EAPO,CAAT,CAFoB,CAUpB;AACA;AACA;AACA;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4BN,KAA5B;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAI,MAAA,KAAK,EAAE;AAACO,QAAAA,KAAK,EAAC;AAAP,OAAX;AAA4B,MAAA,SAAS,EAAC,aAAtC;AAAA,gCAAgEP,KAAK,CAACQ,WAAN,CAAkB,CAAlB,EAAqBC,IAArF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA,gCAAwCT,KAAK,CAACQ,WAAN,CAAkB,CAAlB,EAAqBC,IAA7D;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA,iCAAyCT,KAAK,CAACQ,WAAN,CAAkBE,GAAlB,GAAwBD,IAAjE;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GA5BQV,Q;;KAAAA,Q;;AA+BT,SAASY,eAAT,CAAyBC,KAAzB,EAAgC;AAC5BP,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBM,KAApB;AACA,SAAO;AACHf,IAAAA,WAAW,EAAEe,KAAK,CAACf;AADhB,GAAP;AAIH;;AAED,eAAeF,OAAO,CAACgB,eAAD,CAAP,CAAyBZ,QAAzB,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport {Link} from 'react-router-dom';\nimport Zoom from '../animations/zoomin.js';\nimport Socket from \"../../Socket\";\nimport { connect } from 'react-redux';\nimport { handleNickname, selectedPin } from '../../Reducer/Reducer';\nimport './Game.css';\nimport sound from '../../Assets/game_over.wav';\n\nfunction GameOver(props){\n    \n    useEffect(()=>{\n        // Socket.emit('hostend',props.selectedPin);\n        Socket.emit(\"destroy\",props.selectedPin);\n       \n            const audio = new Audio(sound);\n            audio.play();\n       \n    },[])\n    // const startConnection=()=>{\n    //     console.log(\"connection restart\");\n    //     Socket.emit('startConnect');\n    // }\n    console.log(\"gameoverprops\",props);\n   \n    return(\n        <div className='game-over'>\n            <Zoom/>\n            <h1 className='leaderBoard-title'>Game Over</h1>\n            <br/>\n            <h2 style={{color:\"white\"}} className='leaderBoard'>1st Place: {props.leaderboard[0].name}</h2>\n            <h2 className='leaderBoard'>2nd Place: {props.leaderboard[1].name}</h2>\n            <h2 className='leaderBoard'>Last Place: {props.leaderboard.pop().name}</h2>\n            <br/>\n           \n        </div> \n    )\n}\n\n\nfunction mapStateToProps(state) {\n    console.log(\"state\",state);\n    return {\n        selectedPin: state.selectedPin,\n        \n    }\n}\n\nexport default connect(mapStateToProps)(GameOver);\n"]},"metadata":{},"sourceType":"module"}