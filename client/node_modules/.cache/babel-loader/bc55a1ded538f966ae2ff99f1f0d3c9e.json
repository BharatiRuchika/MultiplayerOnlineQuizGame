{"ast":null,"code":"import _classCallCheck from\"/Users/ruchikaashokbharati/Documents/Projects/Backend_Kahoot-main3/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/ruchikaashokbharati/Documents/Projects/Backend_Kahoot-main3/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/ruchikaashokbharati/Documents/Projects/Backend_Kahoot-main3/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/ruchikaashokbharati/Documents/Projects/Backend_Kahoot-main3/client/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/ruchikaashokbharati/Documents/Projects/Backend_Kahoot-main3/client/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import sound from'../../Assets/counter.wav';import{jsxs as _jsxs}from\"react/jsx-runtime\";var Timer=/*#__PURE__*/function(_Component){_inherits(Timer,_Component);var _super=_createSuper(Timer);function Timer(){var _this;_classCallCheck(this,Timer);_this=_super.call(this);_this.state={time:{},seconds:20};_this.timer=0;_this.startTimer=_this.startTimer.bind(_assertThisInitialized(_this));_this.countDown=_this.countDown.bind(_assertThisInitialized(_this));_this.audio=new Audio(sound);return _this;}_createClass(Timer,[{key:\"secondsToTime\",value:function secondsToTime(secs){var hours=Math.floor(secs/(60*60));// console.log(\"hours\",hours)\nvar divisor_for_minutes=secs%(60*60);// console.log(\"divisor_for_minutes\",divisor_for_minutes)\nvar minutes=Math.floor(divisor_for_minutes/60);// console.log(\"minutes\",minutes);\nvar divisor_for_seconds=divisor_for_minutes%60;// console.log(\"divisor_for_seconds\",divisor_for_seconds);\nvar seconds=Math.ceil(divisor_for_seconds);// console.log(\"seconds\",seconds);\nvar obj={\"h\":hours,\"m\":minutes,\"s\":seconds};return obj;}},{key:\"componentDidMount\",value:function componentDidMount(){var timeLeftVar=this.secondsToTime(this.state.seconds);// console.log(\"timeLeftVar\",timeLeftVar);\nthis.setState({time:timeLeftVar});this.startTimer();}},{key:\"startTimer\",value:function startTimer(){if(this.timer==4){this.audio.play();}if(this.timer==0){this.timer=setInterval(this.countDown,1000);}}},{key:\"countDown\",value:function countDown(){var seconds=this.state.seconds-1;// console.log(\"seconds\",seconds);\nthis.setState({time:this.secondsToTime(seconds),seconds:seconds});if(seconds==0){clearInterval(this.timer);}}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{className:\"timer\",children:[\"Seconds Left: \",this.state.time.s]});}}]);return Timer;}(Component);export{Timer as default};","map":{"version":3,"sources":["/Users/ruchikaashokbharati/Documents/Projects/Backend_Kahoot-main3/client/src/components/Game/Timer.js"],"names":["React","Component","sound","Timer","state","time","seconds","timer","startTimer","bind","countDown","audio","Audio","secs","hours","Math","floor","divisor_for_minutes","minutes","divisor_for_seconds","ceil","obj","timeLeftVar","secondsToTime","setState","play","setInterval","clearInterval","s"],"mappings":"4wBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,KAAP,KAAkB,0BAAlB,C,gDACqBC,CAAAA,K,8FACjB,gBAAc,uCACZ,wBACA,MAAKC,KAAL,CAAa,CAAEC,IAAI,CAAE,EAAR,CAAYC,OAAO,CAAE,EAArB,CAAb,CACA,MAAKC,KAAL,CAAa,CAAb,CACA,MAAKC,UAAL,CAAkB,MAAKA,UAAL,CAAgBC,IAAhB,+BAAlB,CACA,MAAKC,SAAL,CAAiB,MAAKA,SAAL,CAAeD,IAAf,+BAAjB,CACA,MAAKE,KAAL,CAAa,GAAIC,CAAAA,KAAJ,CAAUV,KAAV,CAAb,CANY,aAOb,C,+CAED,uBAAcW,IAAd,CAAmB,CACjB,GAAIC,CAAAA,KAAK,CAAGC,IAAI,CAACC,KAAL,CAAWH,IAAI,EAAI,GAAK,EAAT,CAAf,CAAZ,CACA;AACA,GAAII,CAAAA,mBAAmB,CAAGJ,IAAI,EAAI,GAAK,EAAT,CAA9B,CACA;AACA,GAAIK,CAAAA,OAAO,CAAGH,IAAI,CAACC,KAAL,CAAWC,mBAAmB,CAAG,EAAjC,CAAd,CACA;AACA,GAAIE,CAAAA,mBAAmB,CAAGF,mBAAmB,CAAG,EAAhD,CACA;AACA,GAAIX,CAAAA,OAAO,CAAGS,IAAI,CAACK,IAAL,CAAUD,mBAAV,CAAd,CACA;AACA,GAAIE,CAAAA,GAAG,CAAG,CACR,IAAKP,KADG,CAER,IAAKI,OAFG,CAGR,IAAKZ,OAHG,CAAV,CAKA,MAAOe,CAAAA,GAAP,CACD,C,iCAED,4BAAoB,CAClB,GAAIC,CAAAA,WAAW,CAAG,KAAKC,aAAL,CAAmB,KAAKnB,KAAL,CAAWE,OAA9B,CAAlB,CACA;AACA,KAAKkB,QAAL,CAAc,CAAEnB,IAAI,CAAEiB,WAAR,CAAd,EACA,KAAKd,UAAL,GACD,C,0BAED,qBAAa,CACX,GAAG,KAAKD,KAAL,EAAY,CAAf,CAAiB,CACf,KAAKI,KAAL,CAAWc,IAAX,GACD,CACD,GAAI,KAAKlB,KAAL,EAAc,CAAlB,CAAqB,CACnB,KAAKA,KAAL,CAAamB,WAAW,CAAC,KAAKhB,SAAN,CAAiB,IAAjB,CAAxB,CACD,CACF,C,yBAED,oBAAY,CACV,GAAIJ,CAAAA,OAAO,CAAG,KAAKF,KAAL,CAAWE,OAAX,CAAqB,CAAnC,CACA;AACA,KAAKkB,QAAL,CAAc,CACZnB,IAAI,CAAE,KAAKkB,aAAL,CAAmBjB,OAAnB,CADM,CAEZA,OAAO,CAAEA,OAFG,CAAd,EAKA,GAAIA,OAAO,EAAI,CAAf,CAAkB,CAChBqB,aAAa,CAAC,KAAKpB,KAAN,CAAb,CACD,CACF,C,sBAED,iBAAS,CACP,mBACE,aAAK,SAAS,CAAC,OAAf,4BACgB,KAAKH,KAAL,CAAWC,IAAX,CAAgBuB,CADhC,GADF,CAKD,C,mBAhE8B3B,S,SAAdE,K","sourcesContent":["import React, { Component } from 'react';\nimport sound from '../../Assets/counter.wav';\nexport default class Timer extends Component {\n    constructor() {\n      super();\n      this.state = { time: {}, seconds: 20 };\n      this.timer = 0;\n      this.startTimer = this.startTimer.bind(this);\n      this.countDown = this.countDown.bind(this);\n      this.audio = new Audio(sound);\n    }\n  \n    secondsToTime(secs){\n      let hours = Math.floor(secs / (60 * 60));\n      // console.log(\"hours\",hours)\n      let divisor_for_minutes = secs % (60 * 60);\n      // console.log(\"divisor_for_minutes\",divisor_for_minutes)\n      let minutes = Math.floor(divisor_for_minutes / 60);\n      // console.log(\"minutes\",minutes);\n      let divisor_for_seconds = divisor_for_minutes % 60;\n      // console.log(\"divisor_for_seconds\",divisor_for_seconds);\n      let seconds = Math.ceil(divisor_for_seconds);\n      // console.log(\"seconds\",seconds);\n      let obj = {\n        \"h\": hours,\n        \"m\": minutes,\n        \"s\": seconds\n      };\n      return obj;\n    }\n  \n    componentDidMount() {\n      let timeLeftVar = this.secondsToTime(this.state.seconds);\n      // console.log(\"timeLeftVar\",timeLeftVar);\n      this.setState({ time: timeLeftVar });\n      this.startTimer();\n    }\n  \n    startTimer() {\n      if(this.timer==4){\n        this.audio.play();\n      }\n      if (this.timer == 0) {\n        this.timer = setInterval(this.countDown, 1000);\n      }\n    }\n  \n    countDown() {\n      let seconds = this.state.seconds - 1;\n      // console.log(\"seconds\",seconds);\n      this.setState({\n        time: this.secondsToTime(seconds),\n        seconds: seconds,\n      });\n      \n      if (seconds == 0) { \n        clearInterval(this.timer);\n      }\n    }\n  \n    render() {\n      return(\n        <div className='timer'>\n         Seconds Left: {this.state.time.s}\n        </div>\n      );\n    }\n  }"]},"metadata":{},"sourceType":"module"}