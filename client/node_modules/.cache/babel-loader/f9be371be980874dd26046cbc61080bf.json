{"ast":null,"code":"var _jsxFileName = \"/Users/ruchikaashokbharati/Documents/Projects/Backend_Kahoot-main3/client/src/components/Host/AddAnswersComponent2.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { editingQuiz } from '../../Reducer/Reducer';\nimport jwt from \"jsonwebtoken\";\nimport './Host-Question.css';\nimport './Host.css';\nimport QuizComponent from './QuizComponent'; // import {useParams} from 'react-router-dom';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Questions extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questions: [],\n      quiz: {},\n      newName: '',\n      newInfo: '',\n      userId: '',\n      toggle: false,\n      redirect: false\n    };\n    this.setDone = this.setDone.bind(this);\n  }\n\n  componentDidMount() {\n    // const { userId } = useParams();\n    // var history = useHistory();\n    console.log(\"Addanswercomponent2 called\"); // var userId = this.props.match.params.id;\n    // console.log(\"id\",userId);\n\n    console.log(\"props\", this.props);\n    this.setState({\n      quiz: this.props.quizToEdit,\n      newName: this.props.quizToEdit.quizName,\n      newInfo: this.props.quizToEdit.quizDescription,\n      userId: this.props.quizToEdit.userId\n    });\n    console.log(\"quiz\", this.state.quiz);\n    const token = localStorage.getItem(\"token\"); // var decoded = jwt.decode(token);\n\n    this.getQuestions();\n  }\n\n  async getQuestions() {\n    const token = localStorage.getItem(\"token\");\n    console.log(`id is ${this.props.quizToEdit._id}`);\n    var response = await axios.get(`https://multiplayer-online-quiz-game.vercel.app/quizquestions/getQuestions/${this.props.quizToEdit._id}`, {\n      headers: {\n        'auth-token': token\n      }\n    });\n    console.log(\"data\", response.data);\n    this.setState({\n      questions: response.data\n    });\n  }\n\n  async deleteQuestion(id) {\n    const token = localStorage.getItem(\"token\");\n    var decoded = jwt.decode(token);\n\n    if (decoded.exp * 1000 <= Date.now()) {\n      this.props.history.push(\"/users/login\");\n    } else {\n      var response = await axios.delete(`https://multiplayer-online-quiz-game.vercel.app/quizquestions/deleteQuestion/${id}`, {\n        headers: {\n          'auth-token': token\n        }\n      });\n      this.getQuestions();\n    }\n  }\n\n  displayEdit() {\n    this.setState({\n      toggle: !this.state.toggle\n    });\n  }\n\n  async updateQuiz() {\n    let {\n      newName,\n      newInfo,\n      quiz\n    } = this.state;\n    console.log(\"update quiz called\"); // let { quiz } = this.state;\n\n    console.log(\"quiz\", quiz);\n    this.setState({\n      toggle: !this.state.toggle\n    });\n\n    if (newName && newInfo) {\n      var id = quiz._id;\n      const token = localStorage.getItem(\"token\");\n      var decoded = jwt.decode(token);\n\n      if (decoded.exp * 1000 <= Date.now()) {\n        this.props.history.push(\"/users/login\");\n      } else {\n        await axios.put(`https://multiplayer-online-quiz-game.vercel.app/quiz/updateQuiz/${id}`, {\n          quizName: newName,\n          quizDescription: newInfo\n        }, {\n          headers: {\n            'auth-token': token\n          }\n        });\n        this.handleUpdatedQuiz(quiz._id);\n      }\n    } else {\n      alert('All fields must be completed');\n    }\n  }\n\n  async handleUpdatedQuiz(id) {\n    const token = localStorage.getItem(\"token\");\n    var decoded = jwt.decode(token); // if(decoded.exp*1000<=Date.now()){\n    //     this.props.history.push(\"/users/login\");\n    // }else{\n\n    var response = await axios.get(`https://multiplayer-online-quiz-game.vercel.app/quiz/getQuiz/${this.props.quizToEdit._id}`, {\n      headers: {\n        'auth-token': token\n      }\n    });\n    console.log(\"responseData\", response.data);\n    var responseData = response.data;\n    this.props.editingQuiz(responseData[0]);\n    console.log(\"props\", this.props.quizToEdit);\n    this.setState({\n      quiz: this.props.quizToEdit\n    }); // }\n  }\n\n  setDone() {\n    console.log(\"setDone called\");\n    this.setState({\n      redirect: true\n    });\n  }\n\n  render() {\n    // var userId = this.props.match.params.id;\n    // console.log(\"answercomponentuserId\",userId);\n    let {\n      questions,\n      redirect,\n      userId\n    } = this.state;\n    console.log(\"userId\", userId);\n    console.log(this.state.redirect);\n\n    if (redirect) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: `/host/${userId}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 20\n      }, this);\n    }\n\n    if (questions) {\n      var mappedQuestions = questions.map(question => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: question.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"1: \", question.answer1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"2: \", question.answer2]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"3: \", question.answer3]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"4: \", question.answer4]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Correct: \", question.correctAnswer]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btn-container-edit\",\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: `/host/editquestion/${question._id}/${userId}`,\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-play\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => this.deleteQuestion(question._id),\n              className: \"btn-play\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this)]\n        }, question._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this);\n      });\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mapped-container\",\n      children: [!this.state.toggle ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toggle-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-done-div\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.setDone,\n            className: \"btn-play btn-done\",\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"kwizz-container-edit\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"kwizz-title\",\n            children: this.state.quiz.quizName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"kwizz-info kwizz-desc\",\n            children: this.state.quiz.quizDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btn-update\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => this.displayEdit(),\n              className: \"btn-play\",\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toggle-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-done-div\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/host\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-play btn-done\",\n              children: \"Done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"kwizz-container-edit\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: this.state.quiz.quizName,\n            onChange: e => {\n              console.log(\"e\", e.target.value);\n              this.setState({\n                newName: e.target.value\n              });\n            },\n            className: \"title-input input-edit \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 34\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: this.state.quiz.quizDescription,\n            onChange: e => {\n              console.log(\"e\", e.target.value);\n              this.setState({\n                newInfo: e.target.value\n              });\n            },\n            className: \"desc-input input-edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btn-container-edit\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => this.updateQuiz(),\n              className: \"btn-play\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => this.displayEdit(),\n              className: \"btn-play\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-edit-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-quesiton-div\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/host/newquestion/${this.props.quizToEdit._id}/${userId}`,\n            className: \"btn-link\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-new\",\n              id: \"add-question-btn\",\n              children: \"Add Question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mapped-questions\",\n          children: mappedQuestions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    quizToEdit: state.quizToEdit\n  };\n}\n\nexport default connect(mapStateToProps, {\n  editingQuiz\n})(Questions);","map":{"version":3,"sources":["/Users/ruchikaashokbharati/Documents/Projects/Backend_Kahoot-main3/client/src/components/Host/AddAnswersComponent2.js"],"names":["React","Component","axios","Link","Redirect","connect","editingQuiz","jwt","QuizComponent","Questions","constructor","props","state","questions","quiz","newName","newInfo","userId","toggle","redirect","setDone","bind","componentDidMount","console","log","setState","quizToEdit","quizName","quizDescription","token","localStorage","getItem","getQuestions","_id","response","get","headers","data","deleteQuestion","id","decoded","decode","exp","Date","now","history","push","delete","displayEdit","updateQuiz","put","handleUpdatedQuiz","alert","responseData","render","mappedQuestions","map","question","answer1","answer2","answer3","answer4","correctAnswer","e","target","value","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAcC,QAAd,QAA8B,kBAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAO,qBAAP;AACA,OAAO,YAAP;AACA,OAAOC,aAAP,MAA0B,iBAA1B,C,CACA;;;;AACA,MAAMC,SAAN,SAAwBR,SAAxB,CAAkC;AAC9BS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,EADF;AAETC,MAAAA,IAAI,EAAE,EAFG;AAGTC,MAAAA,OAAO,EAAE,EAHA;AAITC,MAAAA,OAAO,EAAE,EAJA;AAKTC,MAAAA,MAAM,EAAC,EALE;AAMTC,MAAAA,MAAM,EAAE,KANC;AAOTC,MAAAA,QAAQ,EAAC;AAPA,KAAb;AASA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf;AAEH;;AACDC,EAAAA,iBAAiB,GAAG;AAChB;AACA;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAHgB,CAIhB;AACA;;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,KAAKb,KAA1B;AACA,SAAKc,QAAL,CAAc;AACVX,MAAAA,IAAI,EAAE,KAAKH,KAAL,CAAWe,UADP;AAEVX,MAAAA,OAAO,EAAC,KAAKJ,KAAL,CAAWe,UAAX,CAAsBC,QAFpB;AAGVX,MAAAA,OAAO,EAAC,KAAKL,KAAL,CAAWe,UAAX,CAAsBE,eAHpB;AAIVX,MAAAA,MAAM,EAAC,KAAKN,KAAL,CAAWe,UAAX,CAAsBT;AAJnB,KAAd;AAMAM,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoB,KAAKZ,KAAL,CAAWE,IAA/B;AACA,UAAMe,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd,CAdgB,CAehB;;AAEA,SAAKC,YAAL;AAEH;;AAEiB,QAAZA,YAAY,GAAG;AACjB,UAAMH,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACDR,IAAAA,OAAO,CAACC,GAAR,CAAa,SAAQ,KAAKb,KAAL,CAAWe,UAAX,CAAsBO,GAAI,EAA/C;AACA,QAAIC,QAAQ,GAAG,MAAMhC,KAAK,CAACiC,GAAN,CAAW,8EAA6E,KAAKxB,KAAL,CAAWe,UAAX,CAAsBO,GAAI,EAAlH,EAAoH;AACrIG,MAAAA,OAAO,EAAC;AACJ,sBAAaP;AADT;AAD6H,KAApH,CAArB;AAKKN,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBU,QAAQ,CAACG,IAA7B;AACA,SAAKZ,QAAL,CAAc;AACVZ,MAAAA,SAAS,EAAEqB,QAAQ,CAACG;AADV,KAAd;AAGH;;AAEe,QAAdC,cAAc,CAACC,EAAD,EAAK;AACrB,UAAMV,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AAEA,QAAIS,OAAO,GAAGjC,GAAG,CAACkC,MAAJ,CAAWZ,KAAX,CAAd;;AACA,QAAGW,OAAO,CAACE,GAAR,GAAY,IAAZ,IAAkBC,IAAI,CAACC,GAAL,EAArB,EAAgC;AAC5B,WAAKjC,KAAL,CAAWkC,OAAX,CAAmBC,IAAnB,CAAwB,cAAxB;AACH,KAFD,MAEK;AACD,UAAIZ,QAAQ,GAAI,MAAMhC,KAAK,CAAC6C,MAAN,CAAc,gFAA+ER,EAAG,EAAhG,EAAkG;AACzHH,QAAAA,OAAO,EAAC;AACJ,wBAAaP;AADT;AADiH,OAAlG,CAAtB;AAKJ,WAAKG,YAAL;AACC;AACJ;;AAEDgB,EAAAA,WAAW,GAAG;AACV,SAAKvB,QAAL,CAAc;AACVP,MAAAA,MAAM,EAAE,CAAC,KAAKN,KAAL,CAAWM;AADV,KAAd;AAGH;;AAEe,QAAV+B,UAAU,GAAG;AAGf,QAAI;AAAElC,MAAAA,OAAF;AAAWC,MAAAA,OAAX;AAAoBF,MAAAA;AAApB,QAA6B,KAAKF,KAAtC;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAJe,CAKf;;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBV,IAAnB;AACA,SAAKW,QAAL,CAAc;AACVP,MAAAA,MAAM,EAAE,CAAC,KAAKN,KAAL,CAAWM;AADV,KAAd;;AAIA,QAAIH,OAAO,IAAIC,OAAf,EAAwB;AACpB,UAAIuB,EAAE,GAAGzB,IAAI,CAACmB,GAAd;AACA,YAAMJ,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,UAAIS,OAAO,GAAGjC,GAAG,CAACkC,MAAJ,CAAWZ,KAAX,CAAd;;AACA,UAAGW,OAAO,CAACE,GAAR,GAAY,IAAZ,IAAkBC,IAAI,CAACC,GAAL,EAArB,EAAgC;AAC5B,aAAKjC,KAAL,CAAWkC,OAAX,CAAmBC,IAAnB,CAAwB,cAAxB;AACH,OAFD,MAEK;AACD,cAAM5C,KAAK,CAACgD,GAAN,CAAW,mEAAkEX,EAAG,EAAhF,EAAmF;AAAEZ,UAAAA,QAAQ,EAAEZ,OAAZ;AAAqBa,UAAAA,eAAe,EAAEZ;AAAtC,SAAnF,EAAmI;AACrIoB,UAAAA,OAAO,EAAC;AACJ,0BAAaP;AADT;AAD6H,SAAnI,CAAN;AAKA,aAAKsB,iBAAL,CAAuBrC,IAAI,CAACmB,GAA5B;AACH;AACJ,KAdD,MAcO;AACHmB,MAAAA,KAAK,CAAC,8BAAD,CAAL;AACH;AACA;;AAEkB,QAAjBD,iBAAiB,CAACZ,EAAD,EAAK;AACxB,UAAMV,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,QAAIS,OAAO,GAAGjC,GAAG,CAACkC,MAAJ,CAAWZ,KAAX,CAAd,CAFwB,CAGxB;AACA;AACA;;AACA,QAAIK,QAAQ,GAAG,MAAMhC,KAAK,CAACiC,GAAN,CAAW,gEAA+D,KAAKxB,KAAL,CAAWe,UAAX,CAAsBO,GAAI,EAApG,EAAsG;AACvHG,MAAAA,OAAO,EAAC;AACJ,sBAAaP;AADT;AAD+G,KAAtG,CAArB;AAKAN,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BU,QAAQ,CAACG,IAApC;AACA,QAAIgB,YAAY,GAAGnB,QAAQ,CAACG,IAA5B;AACA,SAAK1B,KAAL,CAAWL,WAAX,CAAuB+C,YAAY,CAAC,CAAD,CAAnC;AACA9B,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoB,KAAKb,KAAL,CAAWe,UAA/B;AACA,SAAKD,QAAL,CAAc;AACVX,MAAAA,IAAI,EAAE,KAAKH,KAAL,CAAWe;AADP,KAAd,EAfwB,CAkB5B;AACC;;AACAN,EAAAA,OAAO,GAAE;AACNG,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,SAAKC,QAAL,CAAc;AACVN,MAAAA,QAAQ,EAAC;AADC,KAAd;AAGH;;AAEDmC,EAAAA,MAAM,GAAG;AACL;AACA;AACA,QAAI;AAAEzC,MAAAA,SAAF;AAAYM,MAAAA,QAAZ;AAAqBF,MAAAA;AAArB,QAAgC,KAAKL,KAAzC;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBP,MAArB;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAWO,QAAvB;;AACA,QAAGA,QAAH,EAAY;AACR,0BAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAG,SAAQF,MAAO;AAA9B;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AACD,QAAIJ,SAAJ,EAAe;AACX,UAAI0C,eAAe,GAAG1C,SAAS,CAAC2C,GAAV,CAAeC,QAAD,IAAc;AAC9C,4BACI;AAAwB,UAAA,SAAS,EAAC,oBAAlC;AAAA,kCACI;AAAA,sBAAKA,QAAQ,CAACA;AAAd;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,oCACI;AAAA,gCAAQA,QAAQ,CAACC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,gCAAQD,QAAQ,CAACE,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA,gCAAQF,QAAQ,CAACG,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAA,gCAAQH,QAAQ,CAACI,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI;AAAA,sCAAcJ,QAAQ,CAACK,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAUI;AAAK,YAAA,SAAS,EAAC,oBAAf;AAAA,oCACI,QAAC,IAAD;AAAM,cAAA,EAAE,EAAG,sBAAqBL,QAAQ,CAACxB,GAAI,IAAGhB,MAAO,EAAvD;AAAA,qCACI;AAAQ,gBAAA,SAAS,EAAC,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII;AAAQ,cAAA,OAAO,EAAE,MAAM,KAAKqB,cAAL,CAAoBmB,QAAQ,CAACxB,GAA7B,CAAvB;AAA0D,cAAA,SAAS,EAAC,UAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVJ;AAAA,WAAUwB,QAAQ,CAACxB,GAAnB;AAAA;AAAA;AAAA;AAAA,gBADJ;AAmBH,OApBqB,CAAtB;AAsBH;;AAED,wBACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,iBAEQ,CAAC,KAAKrB,KAAL,CAAWM,MAAZ,gBAEI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,iCAEQ;AAAQ,YAAA,OAAO,EAAE,KAAKE,OAAtB;AAA8B,YAAA,SAAS,EAAC,mBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI;AAAK,UAAA,SAAS,EAAC,sBAAf;AAAA,kCACI;AAAI,YAAA,SAAS,EAAC,aAAd;AAAA,sBAA6B,KAAKR,KAAL,CAAWE,IAAX,CAAgBa;AAA7C;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAG,YAAA,SAAS,EAAC,uBAAb;AAAA,sBAAsC,KAAKf,KAAL,CAAWE,IAAX,CAAgBc;AAAtD;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,mCACI;AAAQ,cAAA,OAAO,EAAE,MAAM,KAAKoB,WAAL,EAAvB;AAA2C,cAAA,SAAS,EAAC,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,gBAkBI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,OAAT;AAAA,mCACI;AAAQ,cAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI;AAAK,UAAA,SAAS,EAAC,sBAAf;AAAA,kCAGI;AAAO,YAAA,WAAW,EAAE,KAAKpC,KAAL,CAAWE,IAAX,CAAgBa,QAApC;AACC,YAAA,QAAQ,EAAGoC,CAAD,IAAM;AACbxC,cAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAgBuC,CAAC,CAACC,MAAF,CAASC,KAAzB;AACA,mBAAKxC,QAAL,CAAc;AAACV,gBAAAA,OAAO,EAAEgD,CAAC,CAACC,MAAF,CAASC;AAAnB,eAAd;AAAyC,aAH7C;AAII,YAAA,SAAS,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAQK;AAAA;AAAA;AAAA;AAAA,kBARL,eASI;AAAU,YAAA,WAAW,EAAE,KAAKrD,KAAL,CAAWE,IAAX,CAAgBc,eAAvC;AACA,YAAA,QAAQ,EAAGmC,CAAD,IAAO;AACbxC,cAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAgBuC,CAAC,CAACC,MAAF,CAASC,KAAzB;AACA,mBAAKxC,QAAL,CAAc;AAAET,gBAAAA,OAAO,EAAE+C,CAAC,CAACC,MAAF,CAASC;AAApB,eAAd;AAA0C,aAH9C;AAIA,YAAA,SAAS,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA,kBATJ,eAcI;AAAK,YAAA,SAAS,EAAC,oBAAf;AAAA,oCACI;AAAQ,cAAA,OAAO,EAAE,MAAM,KAAKhB,UAAL,EAAvB;AAA0C,cAAA,SAAS,EAAC,UAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAQ,cAAA,OAAO,EAAE,MAAM,KAAKD,WAAL,EAAvB;AAA2C,cAAA,SAAS,EAAC,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cApBZ,eA+CI;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,iCACA,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,qBAAoB,KAAKrC,KAAL,CAAWe,UAAX,CAAsBO,GAAI,IAAGhB,MAAO,EAAnE;AAAsE,YAAA,SAAS,EAAC,UAAhF;AAAA,mCACQ;AAAQ,cAAA,SAAS,EAAC,SAAlB;AAA4B,cAAA,EAAE,EAAC,kBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI;AAAA;AAAA;AAAA;AAAA,gBANJ,eAMU;AAAA;AAAA;AAAA;AAAA,gBANV,eAOI;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,oBACKsC;AADL;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cA/CJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA6DH;;AAhO6B;;AAkOlC,SAASW,eAAT,CAAyBtD,KAAzB,EAAgC;AAC5B,SAAO;AACHc,IAAAA,UAAU,EAAEd,KAAK,CAACc;AADf,GAAP;AAGH;;AAED,eAAerB,OAAO,CAAC6D,eAAD,EAAkB;AAAE5D,EAAAA;AAAF,CAAlB,CAAP,CAA0CG,SAA1C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link,Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { editingQuiz } from '../../Reducer/Reducer';\nimport jwt from \"jsonwebtoken\";\nimport './Host-Question.css';\nimport './Host.css';\nimport QuizComponent from './QuizComponent';\n// import {useParams} from 'react-router-dom';\nclass Questions extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            questions: [],\n            quiz: {},\n            newName: '',\n            newInfo: '',\n            userId:'',\n            toggle: false,\n            redirect:false\n        }\n        this.setDone = this.setDone.bind(this);\n      \n    }\n    componentDidMount() {\n        // const { userId } = useParams();\n        // var history = useHistory();\n        console.log(\"Addanswercomponent2 called\");\n        // var userId = this.props.match.params.id;\n        // console.log(\"id\",userId);\n        console.log(\"props\", this.props);\n        this.setState({\n            quiz: this.props.quizToEdit,\n            newName:this.props.quizToEdit.quizName,\n            newInfo:this.props.quizToEdit.quizDescription,\n            userId:this.props.quizToEdit.userId\n        })\n        console.log(\"quiz\", this.state.quiz);\n        const token = localStorage.getItem(\"token\");\n        // var decoded = jwt.decode(token);\n      \n        this.getQuestions();\n        \n    }\n\n    async getQuestions() {\n        const token = localStorage.getItem(\"token\");\n       console.log(`id is ${this.props.quizToEdit._id}`)\n       var response = await axios.get(`https://multiplayer-online-quiz-game.vercel.app/quizquestions/getQuestions/${this.props.quizToEdit._id}`,{\n           headers:{\n               'auth-token':token\n           }\n       })\n            console.log(\"data\", response.data);\n            this.setState({\n                questions: response.data,\n            })\n        }\n\n    async deleteQuestion(id) {\n        const token = localStorage.getItem(\"token\");\n       \n        var decoded = jwt.decode(token);\n        if(decoded.exp*1000<=Date.now()){\n            this.props.history.push(\"/users/login\");\n        }else{\n            var response =  await axios.delete(`https://multiplayer-online-quiz-game.vercel.app/quizquestions/deleteQuestion/${id}`,{\n           headers:{\n               'auth-token':token\n           }\n       })\n        this.getQuestions();\n        }\n    }\n\n    displayEdit() {\n        this.setState({\n            toggle: !this.state.toggle\n        })\n    }\n\n    async updateQuiz() {\n        \n\n        let { newName, newInfo, quiz } = this.state;\n        console.log(\"update quiz called\");\n        // let { quiz } = this.state;\n        console.log(\"quiz\",quiz);\n        this.setState({\n            toggle: !this.state.toggle\n        })\n      \n        if (newName && newInfo) {\n            var id = quiz._id;\n            const token = localStorage.getItem(\"token\");\n            var decoded = jwt.decode(token);\n            if(decoded.exp*1000<=Date.now()){\n                this.props.history.push(\"/users/login\");\n            }else{\n                await axios.put(`https://multiplayer-online-quiz-game.vercel.app/quiz/updateQuiz/${id}`, { quizName: newName, quizDescription: newInfo },{\n                    headers:{\n                        'auth-token':token\n                    }\n                })\n                this.handleUpdatedQuiz(quiz._id)\n            }\n        } else {\n            alert('All fields must be completed')\n        }\n        } \n    \n    async handleUpdatedQuiz(id) {\n        const token = localStorage.getItem(\"token\");\n        var decoded = jwt.decode(token);\n        // if(decoded.exp*1000<=Date.now()){\n        //     this.props.history.push(\"/users/login\");\n        // }else{\n        var response = await axios.get(`https://multiplayer-online-quiz-game.vercel.app/quiz/getQuiz/${this.props.quizToEdit._id}`,{\n            headers:{\n                'auth-token':token\n            }\n        })\n        console.log(\"responseData\",response.data);\n        var responseData = response.data;\n        this.props.editingQuiz(responseData[0]);\n        console.log(\"props\",this.props.quizToEdit)\n        this.setState({\n            quiz: this.props.quizToEdit\n        })\n    // }\n    }\n     setDone(){\n        console.log(\"setDone called\");\n        this.setState({\n            redirect:true\n        })\n    }\n\n    render() {\n        // var userId = this.props.match.params.id;\n        // console.log(\"answercomponentuserId\",userId);\n        let { questions,redirect,userId } = this.state;\n        console.log(\"userId\",userId);\n        console.log(this.state.redirect);\n        if(redirect){\n            return <Redirect to={`/host/${userId}`}/>;\n        }\n        if (questions) {\n            var mappedQuestions = questions.map((question) => {\n                return (\n                    <div key={question._id} className='question-container'>\n                        <h1>{question.question}</h1>\n                        <ul>\n                            <li>1: {question.answer1}</li>\n                            <li>2: {question.answer2}</li>\n                            <li>3: {question.answer3}</li>\n                            <li>4: {question.answer4}</li>\n                            <li>Correct: {question.correctAnswer}</li>\n\n                        </ul>\n                        <div className='btn-container-edit' >\n                            <Link to={`/host/editquestion/${question._id}/${userId}`}>\n                                <button className='btn-play' >Edit</button>\n                            </Link>\n                            <button onClick={() => this.deleteQuestion(question._id)} className='btn-play'>Delete</button>\n                        </div>\n                    </div>\n                )\n            })\n\n        }\n\n        return (\n            <div className='mapped-container' >\n                {\n                    !this.state.toggle\n                        ?\n                        <div className='toggle-container'>\n                            <div className='btn-done-div'>\n                                {/* <Link to={`/host/${this.props.userId}`}> */}\n                                    <button onClick={this.setDone}className='btn-play btn-done' >Done</button>\n                                {/* </Link> */}\n                            </div>\n                            <div className='kwizz-container-edit'>\n                                <h1 className='kwizz-title'>{this.state.quiz.quizName}</h1>\n                                <br />\n                                <p className='kwizz-info kwizz-desc'>{this.state.quiz.quizDescription}</p>\n                                <div className='btn-update'>\n                                    <button onClick={() => this.displayEdit()} className='btn-play'>Update</button>\n                                </div>\n                            </div>\n                        </div>\n                        :\n                        <div className='toggle-container'>\n                            <div className='btn-done-div'>\n                                <Link to='/host'>\n                                    <button className='btn-play btn-done' >Done</button>\n                                </Link>\n                            </div>\n                            <div className='kwizz-container-edit'>\n                                {/* <h1 className='kwizz-title'>{this.state.quiz.quizName}</h1>\n                        <p className='kwizz-info kwizz-desc'>{this.state.quiz.quizDescription}</p> */}\n                                <input placeholder={this.state.quiz.quizName}\n                                 onChange={(e) =>{\n                                    console.log(\"e\",e.target.value);\n                                    this.setState({newName: e.target.value})}}\n                                    className='title-input input-edit ' />\n                                 <br />\n                                <textarea placeholder={this.state.quiz.quizDescription} \n                                onChange={(e) => {\n                                    console.log(\"e\",e.target.value);\n                                    this.setState({ newInfo: e.target.value})}} \n                                className='desc-input input-edit'></textarea>\n                                <div className='btn-container-edit'>\n                                    <button onClick={() => this.updateQuiz()} className='btn-play'>Save</button>\n                                    <button onClick={() => this.displayEdit()} className='btn-play'>Cancel</button>\n                                </div>\n                            </div>\n                        </div>\n                }\n                <div className='question-edit-wrapper' >\n                    <div className='add-quesiton-div' >\n                    <Link to={`/host/newquestion/${this.props.quizToEdit._id}/${userId}`} className='btn-link'>\n                            <button className='btn-new' id='add-question-btn'>Add Question</button>\n                        </Link>\n                    </div>\n                    <br /><br />\n                    <div className='mapped-questions'>\n                        {mappedQuestions}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nfunction mapStateToProps(state) {\n    return {\n        quizToEdit: state.quizToEdit\n    }\n}\n\nexport default connect(mapStateToProps, { editingQuiz })(Questions)"]},"metadata":{},"sourceType":"module"}