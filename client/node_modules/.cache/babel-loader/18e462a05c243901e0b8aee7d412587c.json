{"ast":null,"code":"var _jsxFileName = \"/Users/ruchikaashokbharati/Documents/Projects/Backend_Kahoot-main3/client/src/components/Host/QuestionsComponent.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport React from \"react\";\nimport jwt from \"jsonwebtoken\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Questions() {\n  _s();\n\n  const params = useParams();\n  console.log(\"params\", params);\n  const token = localStorage.getItem(\"token\");\n  const [QuestionsList, setQuestionsList] = React.useState([]);\n  useEffect(async () => {\n    var id = params.id;\n    var decoded = jwt.decode(token);\n\n    if (decoded.exp * 1000 <= Date.now()) {\n      this.props.history.push(\"/users/login\");\n    } else {\n      var response = await axios.get(`http://localhost:3001/quizquestions/getQuestions/${id}`, {\n        headers: {\n          'auth-token': token\n        }\n      });\n      console.log(\"questionsresponse\", response);\n      setQuestionsList(response.data);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: [\"Questions (\", QuestionsList.length, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 14\n    }, this), QuestionsList.map(questions => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: \"Quote\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(\"blockquote\", {\n              className: \"blockquote mb-0\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [' ', questions.question, \"?\", ' ']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n                className: \"blockquote-footer\",\n                children: [\"Time \", /*#__PURE__*/_jsxDEV(\"cite\", {\n                  title: \"Source Title\",\n                  children: \"15s\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 14\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 7\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 5\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this)\n      }, void 0, false);\n    }), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      size: \"lg\",\n      children: \"Play\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this), ' ']\n  }, void 0, true);\n}\n\n_s(Questions, \"tkN2xFKwse+H1rBPgBmn9pVVOm8=\", false, function () {\n  return [useParams];\n});\n\n_c = Questions;\nexport default Questions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"sources":["/Users/ruchikaashokbharati/Documents/Projects/Backend_Kahoot-main3/client/src/components/Host/QuestionsComponent.js"],"names":["useEffect","useParams","axios","React","jwt","Card","Button","Questions","params","console","log","token","localStorage","getItem","QuestionsList","setQuestionsList","useState","id","decoded","decode","exp","Date","now","props","history","push","response","get","headers","data","textAlign","length","map","questions","question"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;;;AACA,SAASC,SAAT,GAAoB;AAAA;;AAChB,QAAMC,MAAM,GAAGP,SAAS,EAAxB;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBF,MAArB;AACA,QAAMG,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,QAAM,CAACC,aAAD,EAAeC,gBAAf,IAAmCZ,KAAK,CAACa,QAAN,CAAe,EAAf,CAAzC;AACAhB,EAAAA,SAAS,CAAC,YAAS;AACf,QAAIiB,EAAE,GAAGT,MAAM,CAACS,EAAhB;AAEA,QAAIC,OAAO,GAAGd,GAAG,CAACe,MAAJ,CAAWR,KAAX,CAAd;;AACA,QAAGO,OAAO,CAACE,GAAR,GAAY,IAAZ,IAAkBC,IAAI,CAACC,GAAL,EAArB,EAAgC;AAC5B,WAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,cAAxB;AACH,KAFD,MAEK;AACL,UAAIC,QAAQ,GAAG,MAAMxB,KAAK,CAACyB,GAAN,CAAW,oDAAmDV,EAAG,EAAjE,EAAmE;AACtFW,QAAAA,OAAO,EAAC;AACN,wBAAajB;AADP;AAD8E,OAAnE,CAArB;AAKAF,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAgCgB,QAAhC;AACAX,MAAAA,gBAAgB,CAACW,QAAQ,CAACG,IAAV,CAAhB;AACC;AACJ,GAfQ,EAeP,EAfO,CAAT;AAgBA,sBAAO;AAAA,4BAAE;AAAI,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAC;AAAX,OAAX;AAAA,gCAA6ChB,aAAa,CAACiB,MAA3D;AAAA;AAAA;AAAA;AAAA;AAAA,YAAF,EACNjB,aAAa,CAACkB,GAAd,CAAmBC,SAAD,IAAa;AAC5B,0BAAO;AAAA,+BACP,QAAC,IAAD;AAAA,kCACN,QAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADM,eAEN,QAAC,IAAD,CAAM,IAAN;AAAA,mCACE;AAAY,cAAA,SAAS,EAAC,iBAAtB;AAAA,sCACE;AAAA,2BACG,GADH,EAEEA,SAAS,CAACC,QAFZ,OAEuB,GAFvB;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAKE;AAAQ,gBAAA,SAAS,EAAC,mBAAlB;AAAA,iDACO;AAAM,kBAAA,KAAK,EAAC,cAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADP;AAAA;AAAA;AAAA;AAAA;AAAA,sBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFM;AAAA;AAAA;AAAA;AAAA;AAAA;AADO,uBAAP;AAiBH,KAlBA,CADM,eAoBP,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,IAAI,EAAC,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YApBO,EAsBG,GAtBH;AAAA,kBAAP;AAwBH;;GA7CQ3B,S;UACUN,S;;;KADVM,S;AA8CT,eAAeA,SAAf","sourcesContent":["import { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport React from \"react\";\nimport jwt from \"jsonwebtoken\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from 'react-bootstrap/Button';\nfunction Questions(){\n    const params = useParams();\n    console.log(\"params\",params);\n    const token = localStorage.getItem(\"token\");\n    const [QuestionsList,setQuestionsList] = React.useState([]);\n    useEffect(async()=>{\n        var id = params.id;\n     \n        var decoded = jwt.decode(token);\n        if(decoded.exp*1000<=Date.now()){\n            this.props.history.push(\"/users/login\");\n        }else{\n        var response = await axios.get(`http://localhost:3001/quizquestions/getQuestions/${id}`,{\n          headers:{\n            'auth-token':token\n          }\n        });\n        console.log(\"questionsresponse\",response);\n        setQuestionsList(response.data);\n        }\n    },[])\n    return(<><h3 style={{textAlign:\"center\"}}>Questions ({QuestionsList.length})</h3>\n    {QuestionsList.map((questions)=>{\n        return(<>\n        <Card>\n  <Card.Header>Quote</Card.Header>\n  <Card.Body>\n    <blockquote className=\"blockquote mb-0\">\n      <p>\n        {' '}\n       {questions.question}?{' '}\n      </p>\n      <footer className=\"blockquote-footer\">\n        Time <cite title=\"Source Title\">15s</cite>\n      </footer>\n    </blockquote>\n  </Card.Body>\n</Card>\n\n        </>)\n    })}\n    <Button variant=\"primary\" size=\"lg\">\n     Play\n    </Button>{' '}\n    </>)\n}\nexport default Questions;"]},"metadata":{},"sourceType":"module"}