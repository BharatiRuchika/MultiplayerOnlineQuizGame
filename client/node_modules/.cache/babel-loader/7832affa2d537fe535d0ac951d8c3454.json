{"ast":null,"code":"import React,{useEffect}from'react';import{Link}from'react-router-dom';import Zoom from'../animations/zoomin.js';import Socket from\"../../Socket\";import{connect}from'react-redux';import{handleNickname,selectedPin}from'../../Reducer/Reducer';import'./Game.css';import sound from'../../Assets/game_over.wav';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function GameOver(props){useEffect(function(){// Socket.emit('hostend',props.selectedPin);\nSocket.emit(\"destroy\",props.selectedPin);var audio=new Audio(sound);audio.play();},[]);// const startConnection=()=>{\n//     console.log(\"connection restart\");\n//     Socket.emit('startConnect');\n// }\nconsole.log(\"gameoverprops\",props);return/*#__PURE__*/_jsxs(\"div\",{className:\"game-over\",children:[/*#__PURE__*/_jsx(Zoom,{}),/*#__PURE__*/_jsx(\"h1\",{className:\"leaderBoard-title\",children:\"Game Over\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"h2\",{style:{color:\"white\"},className:\"leaderBoard\",children:[\"1st Place: \",props.leaderboard[0].name]}),/*#__PURE__*/_jsxs(\"h2\",{className:\"leaderBoard\",children:[\"2nd Place: \",props.leaderboard[1].name]}),/*#__PURE__*/_jsxs(\"h2\",{className:\"leaderBoard\",children:[\"Last Place: \",props.leaderboard.pop().name]}),/*#__PURE__*/_jsx(\"br\",{})]});}function mapStateToProps(state){console.log(\"state\",state);return{selectedPin:state.selectedPin};}export default connect(mapStateToProps)(GameOver);","map":{"version":3,"sources":["/Users/ruchikaashokbharati/Documents/Projects/Backend_Kahoot-main3/client/src/components/Game/Game_Over.js"],"names":["React","useEffect","Link","Zoom","Socket","connect","handleNickname","selectedPin","sound","GameOver","props","emit","audio","Audio","play","console","log","color","leaderboard","name","pop","mapStateToProps","state"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAAQC,IAAR,KAAmB,kBAAnB,CACA,MAAOC,CAAAA,IAAP,KAAiB,yBAAjB,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,cAAT,CAAyBC,WAAzB,KAA4C,uBAA5C,CACA,MAAO,YAAP,CACA,MAAOC,CAAAA,KAAP,KAAkB,4BAAlB,C,wFAEA,QAASC,CAAAA,QAAT,CAAkBC,KAAlB,CAAwB,CAEpBT,SAAS,CAAC,UAAI,CACV;AACAG,MAAM,CAACO,IAAP,CAAY,SAAZ,CAAsBD,KAAK,CAACH,WAA5B,EAEI,GAAMK,CAAAA,KAAK,CAAG,GAAIC,CAAAA,KAAJ,CAAUL,KAAV,CAAd,CACAI,KAAK,CAACE,IAAN,GAEP,CAPQ,CAOP,EAPO,CAAT,CAQA;AACA;AACA;AACA;AACAC,OAAO,CAACC,GAAR,CAAY,eAAZ,CAA4BN,KAA5B,EAEA,mBACI,aAAK,SAAS,CAAC,WAAf,wBACI,KAAC,IAAD,IADJ,cAEI,WAAI,SAAS,CAAC,mBAAd,uBAFJ,cAGI,aAHJ,cAII,YAAI,KAAK,CAAE,CAACO,KAAK,CAAC,OAAP,CAAX,CAA4B,SAAS,CAAC,aAAtC,yBAAgEP,KAAK,CAACQ,WAAN,CAAkB,CAAlB,EAAqBC,IAArF,GAJJ,cAKI,YAAI,SAAS,CAAC,aAAd,yBAAwCT,KAAK,CAACQ,WAAN,CAAkB,CAAlB,EAAqBC,IAA7D,GALJ,cAMI,YAAI,SAAS,CAAC,aAAd,0BAAyCT,KAAK,CAACQ,WAAN,CAAkBE,GAAlB,GAAwBD,IAAjE,GANJ,cAOI,aAPJ,GADJ,CAYH,CAGD,QAASE,CAAAA,eAAT,CAAyBC,KAAzB,CAAgC,CAC5BP,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAoBM,KAApB,EACA,MAAO,CACHf,WAAW,CAAEe,KAAK,CAACf,WADhB,CAAP,CAIH,CAED,cAAeF,CAAAA,OAAO,CAACgB,eAAD,CAAP,CAAyBZ,QAAzB,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport {Link} from 'react-router-dom';\nimport Zoom from '../animations/zoomin.js';\nimport Socket from \"../../Socket\";\nimport { connect } from 'react-redux';\nimport { handleNickname, selectedPin } from '../../Reducer/Reducer';\nimport './Game.css';\nimport sound from '../../Assets/game_over.wav';\n\nfunction GameOver(props){\n    \n    useEffect(()=>{\n        // Socket.emit('hostend',props.selectedPin);\n        Socket.emit(\"destroy\",props.selectedPin);\n       \n            const audio = new Audio(sound);\n            audio.play();\n       \n    },[])\n    // const startConnection=()=>{\n    //     console.log(\"connection restart\");\n    //     Socket.emit('startConnect');\n    // }\n    console.log(\"gameoverprops\",props);\n   \n    return(\n        <div className='game-over'>\n            <Zoom/>\n            <h1 className='leaderBoard-title'>Game Over</h1>\n            <br/>\n            <h2 style={{color:\"white\"}} className='leaderBoard'>1st Place: {props.leaderboard[0].name}</h2>\n            <h2 className='leaderBoard'>2nd Place: {props.leaderboard[1].name}</h2>\n            <h2 className='leaderBoard'>Last Place: {props.leaderboard.pop().name}</h2>\n            <br/>\n           \n        </div> \n    )\n}\n\n\nfunction mapStateToProps(state) {\n    console.log(\"state\",state);\n    return {\n        selectedPin: state.selectedPin,\n        \n    }\n}\n\nexport default connect(mapStateToProps)(GameOver);\n"]},"metadata":{},"sourceType":"module"}